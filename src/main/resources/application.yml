server:
  port: 8925
  tomcat.max-threads: 900
  tomcat.uri-encoding: UTF-8
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/lishuo_test?characterEncoding=utf-8&useSSL=false
    username: root
    password: abcd1234
    driver-class-name: com.mysql.cj.jdbc.Driver
    platform: mysql
    # 使用druid连接池
    type: com.alibaba.druid.pool.DruidDataSource
    # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: false
#redis
redis:
  host: 127.0.0.1
  port: 6379
  timout : 60000
  pool:
     maxidle : 100
     minidle :  0
     maxactive : 2000
     cluster:
       node: 127.0.0.1:6379
mybatis:
    typeAliasesPackage: com.lishuo.springboot.pojo
    mapper-locations: classpath:mapping/*.xml
    #通用mapper的所在接口名称 不只是包名
    mappers: com.lishuo.springboot.utils.BaseMapper
    #数据库
    identity: MYSQL

#配置分页插件pagehelper
pagehelper:
    helperDialect: mysql
    #当参数设置为true时,pageNum <= 0 会查询第一页 pageNum > pages 超过总数时， 会查询最后一页
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql
